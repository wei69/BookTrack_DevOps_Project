function cov_23wnonlslp(){var path="C:\\Users\\wei long\\Documents\\devoppart2\\BookTrack_DevOps_Project\\utils\\add-transaction-util.js";var hash="3d5d6d2024355d84b1d222d6d08cac053c9e24f9";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"C:\\Users\\wei long\\Documents\\devoppart2\\BookTrack_DevOps_Project\\utils\\add-transaction-util.js",statementMap:{"0":{start:{line:1,column:13},end:{line:1,column:28}},"1":{start:{line:2,column:17},end:{line:2,column:37}},"2":{start:{line:3,column:16},end:{line:3,column:35}},"3":{start:{line:4,column:13},end:{line:4,column:38}},"4":{start:{line:5,column:26},end:{line:5,column:65}},"5":{start:{line:6,column:19},end:{line:6,column:23}},"6":{start:{line:8,column:0},end:{line:8,column:19}},"7":{start:{line:10,column:0},end:{line:112,column:3}},"8":{start:{line:13,column:4},end:{line:20,column:7}},"9":{start:{line:15,column:21},end:{line:15,column:43}},"10":{start:{line:16,column:8},end:{line:18,column:9}},"11":{start:{line:17,column:12},end:{line:17,column:87}},"12":{start:{line:19,column:8},end:{line:19,column:42}},"13":{start:{line:23,column:4},end:{line:36,column:7}},"14":{start:{line:24,column:32},end:{line:29,column:9}},"15":{start:{line:31,column:20},end:{line:31,column:89}},"16":{start:{line:32,column:8},end:{line:32,column:43}},"17":{start:{line:34,column:8},end:{line:34,column:40}},"18":{start:{line:35,column:8},end:{line:35,column:88}},"19":{start:{line:39,column:4},end:{line:52,column:7}},"20":{start:{line:40,column:32},end:{line:45,column:9}},"21":{start:{line:47,column:20},end:{line:47,column:89}},"22":{start:{line:48,column:8},end:{line:48,column:43}},"23":{start:{line:50,column:8},end:{line:50,column:40}},"24":{start:{line:51,column:8},end:{line:51,column:70}},"25":{start:{line:55,column:4},end:{line:68,column:7}},"26":{start:{line:56,column:32},end:{line:61,column:9}},"27":{start:{line:63,column:20},end:{line:63,column:89}},"28":{start:{line:64,column:8},end:{line:64,column:43}},"29":{start:{line:66,column:8},end:{line:66,column:40}},"30":{start:{line:67,column:8},end:{line:67,column:80}},"31":{start:{line:71,column:4},end:{line:84,column:7}},"32":{start:{line:72,column:32},end:{line:77,column:9}},"33":{start:{line:79,column:20},end:{line:79,column:89}},"34":{start:{line:80,column:8},end:{line:80,column:43}},"35":{start:{line:82,column:8},end:{line:82,column:40}},"36":{start:{line:83,column:8},end:{line:83,column:103}},"37":{start:{line:87,column:4},end:{line:111,column:7}},"38":{start:{line:89,column:33},end:{line:94,column:9}},"39":{start:{line:96,column:8},end:{line:96,column:79}},"40":{start:{line:99,column:33},end:{line:104,column:9}},"41":{start:{line:106,column:20},end:{line:106,column:90}},"42":{start:{line:107,column:8},end:{line:107,column:43}},"43":{start:{line:109,column:8},end:{line:109,column:40}},"44":{start:{line:110,column:8},end:{line:110,column:100}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:10,column:51},end:{line:10,column:52}},loc:{start:{line:10,column:57},end:{line:112,column:1}},line:10},"1":{name:"(anonymous_1)",decl:{start:{line:13,column:11},end:{line:13,column:12}},loc:{start:{line:13,column:23},end:{line:20,column:5}},line:13},"2":{name:"(anonymous_2)",decl:{start:{line:23,column:54},end:{line:23,column:55}},loc:{start:{line:23,column:66},end:{line:36,column:5}},line:23},"3":{name:"(anonymous_3)",decl:{start:{line:39,column:56},end:{line:39,column:57}},loc:{start:{line:39,column:68},end:{line:52,column:5}},line:39},"4":{name:"(anonymous_4)",decl:{start:{line:55,column:65},end:{line:55,column:66}},loc:{start:{line:55,column:77},end:{line:68,column:5}},line:55},"5":{name:"(anonymous_5)",decl:{start:{line:71,column:58},end:{line:71,column:59}},loc:{start:{line:71,column:70},end:{line:84,column:5}},line:71},"6":{name:"(anonymous_6)",decl:{start:{line:87,column:65},end:{line:87,column:66}},loc:{start:{line:87,column:77},end:{line:111,column:5}},line:87}},branchMap:{"0":{loc:{start:{line:16,column:8},end:{line:18,column:9}},type:"if",locations:[{start:{line:16,column:8},end:{line:18,column:9}},{start:{line:undefined,column:undefined},end:{line:undefined,column:undefined}}],line:16}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0},b:{"0":[0,0]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"3d5d6d2024355d84b1d222d6d08cac053c9e24f9"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_23wnonlslp=function(){return actualCoverage;};}return actualCoverage;}cov_23wnonlslp();const chai=(cov_23wnonlslp().s[0]++,require('chai'));const chaiHttp=(cov_23wnonlslp().s[1]++,require('chai-http'));const{app}=(cov_23wnonlslp().s[2]++,require('../index'));// Import your app
const Book=(cov_23wnonlslp().s[3]++,require('../models/book'));const BorrowTransaction=(cov_23wnonlslp().s[4]++,require('../models/borrow-transaction'));const{expect}=(cov_23wnonlslp().s[5]++,chai);cov_23wnonlslp().s[6]++;chai.use(chaiHttp);cov_23wnonlslp().s[7]++;describe('POST /addTransaction - Add Transaction',()=>{cov_23wnonlslp().f[0]++;let validBookId;cov_23wnonlslp().s[8]++;before(async()=>{cov_23wnonlslp().f[1]++;// Ensure a book exists in the database for testing
const book=(cov_23wnonlslp().s[9]++,await Book.findOne({}));// Find an existing book
cov_23wnonlslp().s[10]++;if(!book){cov_23wnonlslp().b[0][0]++;cov_23wnonlslp().s[11]++;throw new Error('No book found in the database for testing transactions.');}else{cov_23wnonlslp().b[0][1]++;}cov_23wnonlslp().s[12]++;validBookId=book._id.toString();});// Test: Successfully add a valid transaction
cov_23wnonlslp().s[13]++;it('should successfully add a valid transaction',async()=>{cov_23wnonlslp().f[2]++;const transactionData=(cov_23wnonlslp().s[14]++,{book_id:validBookId,borrower_name:'Test User',borrowDate:new Date().toISOString(),returnDate:new Date(Date.now()+7*24*60*60*1000).toISOString()// 7 days later
});const res=(cov_23wnonlslp().s[15]++,await chai.request(app).post('/addTransaction').send(transactionData));cov_23wnonlslp().s[16]++;console.log('Response:',res.body);cov_23wnonlslp().s[17]++;expect(res).to.have.status(200);cov_23wnonlslp().s[18]++;expect(res.body).to.have.property('message','Transaction added successfully!');});// Test: Invalid book ID
cov_23wnonlslp().s[19]++;it('should return an error for an invalid book ID',async()=>{cov_23wnonlslp().f[3]++;const transactionData=(cov_23wnonlslp().s[20]++,{book_id:'invalidBookId',borrower_name:'Test User',borrowDate:new Date().toISOString(),returnDate:new Date(Date.now()+7*24*60*60*1000).toISOString()});const res=(cov_23wnonlslp().s[21]++,await chai.request(app).post('/addTransaction').send(transactionData));cov_23wnonlslp().s[22]++;console.log('Response:',res.body);cov_23wnonlslp().s[23]++;expect(res).to.have.status(400);cov_23wnonlslp().s[24]++;expect(res.body).to.have.property('error','Invalid book ID');});// Test: Missing borrower name
cov_23wnonlslp().s[25]++;it('should return an error if the borrower name is missing',async()=>{cov_23wnonlslp().f[4]++;const transactionData=(cov_23wnonlslp().s[26]++,{book_id:validBookId,borrower_name:'',// Empty borrower name
borrowDate:new Date().toISOString(),returnDate:new Date(Date.now()+7*24*60*60*1000).toISOString()});const res=(cov_23wnonlslp().s[27]++,await chai.request(app).post('/addTransaction').send(transactionData));cov_23wnonlslp().s[28]++;console.log('Response:',res.body);cov_23wnonlslp().s[29]++;expect(res).to.have.status(400);cov_23wnonlslp().s[30]++;expect(res.body).to.have.property('error','Borrower name is required');});// Test: Invalid date format
cov_23wnonlslp().s[31]++;it('should return an error for invalid date formats',async()=>{cov_23wnonlslp().f[5]++;const transactionData=(cov_23wnonlslp().s[32]++,{book_id:validBookId,borrower_name:'Test User',borrowDate:'invalidDate',returnDate:'invalidDate'});const res=(cov_23wnonlslp().s[33]++,await chai.request(app).post('/addTransaction').send(transactionData));cov_23wnonlslp().s[34]++;console.log('Response:',res.body);cov_23wnonlslp().s[35]++;expect(res).to.have.status(400);cov_23wnonlslp().s[36]++;expect(res.body).to.have.property('error','Invalid date format for borrowDate or returnDate');});// Test: Book already borrowed
cov_23wnonlslp().s[37]++;it('should return an error if the book is already borrowed',async()=>{cov_23wnonlslp().f[6]++;// First transaction
const transactionData1=(cov_23wnonlslp().s[38]++,{book_id:validBookId,borrower_name:'First User',borrowDate:new Date().toISOString(),returnDate:new Date(Date.now()+7*24*60*60*1000).toISOString()// 7 days later
});cov_23wnonlslp().s[39]++;await chai.request(app).post('/addTransaction').send(transactionData1);// Second transaction for the same book
const transactionData2=(cov_23wnonlslp().s[40]++,{book_id:validBookId,borrower_name:'Second User',borrowDate:new Date().toISOString(),returnDate:new Date(Date.now()+7*24*60*60*1000).toISOString()// 7 days later
});const res=(cov_23wnonlslp().s[41]++,await chai.request(app).post('/addTransaction').send(transactionData2));cov_23wnonlslp().s[42]++;console.log('Response:',res.body);cov_23wnonlslp().s[43]++;expect(res).to.have.status(400);cov_23wnonlslp().s[44]++;expect(res.body).to.have.property('error','This book is already borrowed by another user');});});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,